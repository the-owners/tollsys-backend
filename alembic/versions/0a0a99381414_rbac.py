"""RBAC

Revision ID: 0a0a99381414
Revises: 
Create Date: 2025-05-13 22:39:39.693980

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = '0a0a99381414'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Role',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default='CURRENT_TIMESTAMP', nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['User.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('Role', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_Role_name'), ['name'], unique=True)

    op.create_table('Toll',
    sa.Column('tax_id', sa.String(), nullable=False),
    sa.Column('legal_name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['User.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('User',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('toll_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['User.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['Role.id'], ),
    sa.ForeignKeyConstraint(['toll_id'], ['Toll.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('User', schema=None) as batch_op:
        batch_op.create_index('idx_user_created_by', ['created_by'], unique=False)
        batch_op.create_index('idx_user_role_id', ['role_id'], unique=False)
        batch_op.create_index('idx_user_toll_id', ['toll_id'], unique=False)
        batch_op.create_index('idx_user_updated_by', ['updated_by'], unique=False)
        batch_op.create_index('idx_user_username', ['username'], unique=False)

    op.create_table('permission',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('permission', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_permission_name'), ['name'], unique=False)

    op.create_table('Booth',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('toll_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['User.id'], ),
    sa.ForeignKeyConstraint(['toll_id'], ['Toll.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('PaymentMethod',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('icon', sa.String(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['User.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('VehicleType',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('icon', sa.String(), nullable=False),
    sa.Column('rate', sa.Float(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['User.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rolepermission',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['Role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rolepermission')
    op.drop_table('VehicleType')
    op.drop_table('PaymentMethod')
    op.drop_table('Booth')
    with op.batch_alter_table('permission', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_permission_name'))

    op.drop_table('permission')
    with op.batch_alter_table('User', schema=None) as batch_op:
        batch_op.drop_index('idx_user_username')
        batch_op.drop_index('idx_user_updated_by')
        batch_op.drop_index('idx_user_toll_id')
        batch_op.drop_index('idx_user_role_id')
        batch_op.drop_index('idx_user_created_by')

    op.drop_table('User')
    op.drop_table('Toll')
    with op.batch_alter_table('Role', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_Role_name'))

    op.drop_table('Role')
    # ### end Alembic commands ###
