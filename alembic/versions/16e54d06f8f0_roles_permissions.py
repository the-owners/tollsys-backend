"""roles-permissions

Revision ID: 16e54d06f8f0
Revises: 
Create Date: 2025-05-25 05:46:08.005219

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = '16e54d06f8f0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('VehicleType')
    op.drop_table('PaymentMethod')
    with op.batch_alter_table('Permission', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_permission_name'))

    op.drop_table('Permission')
    with op.batch_alter_table('RolePermission', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_role_permission_created_by'))
        batch_op.drop_index(batch_op.f('idx_role_permission_permission_id'))
        batch_op.drop_index(batch_op.f('idx_role_permission_role_id'))
        batch_op.drop_index(batch_op.f('idx_role_permission_updated_by'))

    op.drop_table('RolePermission')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('RolePermission',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('role_id', sa.INTEGER(), nullable=True),
    sa.Column('permission_id', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('created_by', sa.INTEGER(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_by', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['User.id'], ),
    sa.ForeignKeyConstraint(['permission_id'], ['Permission.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['Role.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('RolePermission', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_role_permission_updated_by'), ['updated_by'], unique=False)
        batch_op.create_index(batch_op.f('idx_role_permission_role_id'), ['role_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_role_permission_permission_id'), ['permission_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_role_permission_created_by'), ['created_by'], unique=False)

    op.create_table('Permission',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('Permission', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_permission_name'), ['name'], unique=False)

    op.create_table('PaymentMethod',
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('icon', sa.VARCHAR(), nullable=False),
    sa.Column('active', sa.BOOLEAN(), nullable=False),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('created_by', sa.INTEGER(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_by', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['User.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('VehicleType',
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('icon', sa.VARCHAR(), nullable=False),
    sa.Column('rate', sa.FLOAT(), nullable=False),
    sa.Column('active', sa.BOOLEAN(), nullable=False),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('created_by', sa.INTEGER(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_by', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['User.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###